{"version":3,"sources":["comps/Nav.js","comps/TechIcons.js","comps/Projects.js","comps/Experience.js","comps/MyJumbotron.js","comps/Home.js","comps/Footer.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","setState","react_default","a","createElement","reactstrap_es","color","dark","light","expand","fixed","href","onClick","navbar","className","to","Component","TechIcons","id","src","alt","React","Projects","top","width","Experience","MyJumbotron","Home","comps_MyJumbotron","Experience_Experience","comps_Projects","TechIcons_TechIcons","Footer","App","Fragment","Nav_NavBar","comps_Home","Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d38eb093.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem\r\n} from \"reactstrap\";\r\nimport { NavLink } from \"reactstrap\";\r\n\r\nexport default class NavBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n  }\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar color=\"dark\" dark light expand=\"md\" fixed=\"top\">\r\n          <NavbarBrand href=\"/#home\">Phil Patton</NavbarBrand>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <NavItem>\r\n                <NavLink to=\"/\" href=\"#home\">\r\n                  Home\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink to=\"/\" href=\"#exp\">\r\n                  Experience\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink to=\"/\" href=\"#proj\">\r\n                  Projects\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink to=\"/\" href=\"#techs\">\r\n                  Technologies\r\n                </NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\n\r\nexport default class TechIcons extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container\r\n        id=\"techs\"\r\n        className=\"container-fluid techLogoSVG content-nav-link\"\r\n      >\r\n        <Row>\r\n          <Col>\r\n            <h2 className=\"section-head\">Technologies</h2>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <img src=\"./img/dotnet.svg\" alt=\"dotnet logo\" />\r\n          </Col>\r\n          <Col>\r\n            <img src=\"./img/bootstrap.svg\" alt=\"bootrasp logo\" />\r\n          </Col>\r\n          <Col>\r\n            <img src=\"./img/C_Sharp.svg\" alt=\"C Sharp logo\" />\r\n          </Col>\r\n          <Col>\r\n            <img src=\"./img/css-3.svg\" alt=\"CSS logo\" />\r\n          </Col>\r\n          <Col>\r\n            <img src=\"./img/git-icon.svg\" alt=\"git logo\" />\r\n          </Col>\r\n          <Col>\r\n            <img src=\"./img/github-icon.svg\" alt=\"github logo\" />\r\n          </Col>\r\n          <Col>\r\n            <img src=\"./img/grunt.svg\" alt=\"gru t logo\" />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <img src=\"./img/html-5.svg\" alt=\"html logo\" />\r\n          </Col>\r\n          <Col>\r\n            <img src=\"./img/javascript.svg\" alt=\"javascript logo\" />\r\n          </Col>\r\n\r\n          <Col>\r\n            <img src=\"./img/jquery.svg\" alt=\"jquery logo\" />\r\n          </Col>\r\n          <Col>\r\n            <img\r\n              src=\"./img/microsoft-sql-server.svg\"\r\n              alt=\"microsoft-sql-server logo\"\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <img src=\"./img/npm.svg\" alt=\"npm logo\" />\r\n          </Col>\r\n          <Col>\r\n            <img src=\"./img/react.svg\" alt=\"react logo\" />\r\n          </Col>\r\n          <Col>\r\n            <img src=\"./img/browserify-icon.svg\" alt=\"browserify logo\" />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\n\r\nconst Projects = props => {\r\n  return (\r\n    <Container id=\"proj\" className=\"content-nav-link\">\r\n      <Row>\r\n        <Col>\r\n          <h2 className=\"section-head\">Projects</h2>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Card>\r\n        <CardImg\r\n          top\r\n          width=\"100%\"\r\n          src=\"./img/ear-ninja-screenshot.jpg\"\r\n          alt=\"Ear Ninja Screenshot\"\r\n        />\r\n        <CardBody>\r\n          <CardTitle>\r\n            <a href=\"https://ear-ninja.herokuapp.com/\">Ear Ninja</a>\r\n          </CardTitle>\r\n          <CardSubtitle>\r\n            <a href=\"github.com/ppatton35745/ear-ninja\">\r\n              github.com/ppatton35745/ear-ninja\r\n            </a>\r\n          </CardSubtitle>\r\n          <CardText>\r\n            A musical ear training application for keyboard players with am\r\n            interactive keyboard interface. Ear Ninja challenges users with\r\n            sound questions to be answered on the keyboard and tracks progress\r\n            over time in a game-like format\r\n          </CardText>\r\n          <a href=\"https://ear-ninja.herokuapp.com/\">\r\n            <Button>View Site</Button>\r\n          </a>\r\n        </CardBody>\r\n      </Card>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","import React, { Component } from \"react\";\r\nimport { Container } from \"reactstrap\";\r\n\r\nexport default class Experience extends Component {\r\n  render() {\r\n    return (\r\n      <Container id=\"exp\" className=\"content-nav-link\">\r\n        <h2 className=\"section-head\">Experience</h2>\r\n\r\n        <h5>NASHVILLE SOFTWARE SCHOOL</h5>\r\n        <h6>Full Stack Software Developer, 2018-present</h6>\r\n        <p>\r\n          Intensive full-time software development boot-camp focusing on full\r\n          stack development fundamentals and problem solving.\r\n        </p>\r\n        <ul>\r\n          <li>\r\n            Hands on application of OOP fundamentals through group and\r\n            individual projects reflecting real world business problems\r\n          </li>\r\n          <li>\r\n            Built browser-based single page applications using React, HTML, CSS\r\n            and jQuery\r\n          </li>\r\n          <li>\r\n            Created and modified database design/content using SQL, ADO.NET, and\r\n            ORM tooling, including exposure and experience with migrations\r\n          </li>\r\n          <li>Leveraged Razor for creating and editing MVC applications</li>\r\n        </ul>\r\n\r\n        <h5>LOMA LINDA UNIVERSITY MEDICAL CENTER</h5>\r\n        <h6>Data Architect/Analyst, 2015-2018</h6>\r\n        <p>\r\n          Hired as a data analyst tasked with cost analysis and budget\r\n          projections, promoted to data architect as knowledge of SQL and data\r\n          modeling developed.\r\n        </p>\r\n        <ul>\r\n          <li>\r\n            Extract, transform, and load functions of operational data from\r\n            various source systems for analytical consumption in a data\r\n            warehouse\r\n          </li>\r\n          <li>\r\n            Executed, debugged, and extended data processing routines including\r\n            line item cost analysis, future budget projections, and budget\r\n            variance analysis using a blend of Allscripts EPSi application\r\n            suite, SQL Server, Power BI, and Microsoft Excel\r\n          </li>\r\n          <li>\r\n            Designed and Implemented a DAX tabular cube using SQL Server\r\n            Analysis Services to relate payroll, accounting, patient, and\r\n            operational data in a single model leading to faster budgeting\r\n            cycles and more accurate projections highlighting deficiencies and\r\n            opportunity\r\n          </li>\r\n          <li>\r\n            Created and maintained tables, views, and stored procedures as\r\n            needed to reduce processing time, increase data integrity, and\r\n            facilitate custom processes per management direction using Microsoft\r\n            SQL Server\r\n          </li>\r\n        </ul>\r\n\r\n        <h5>UNITED STATES NAVY</h5>\r\n        <h6>Supply/Logistics, 2012-2015</h6>\r\n        <ul>\r\n          <li>\r\n            Managed USS Cowpens' $450,000 monthly budget including screening all\r\n            departmental purchase requests, determining priority of needs, and\r\n            executing accurate procurement orders utilizing the naval supply\r\n            requisitioning system.\r\n          </li>\r\n          <li>\r\n            Produced and discussed with the Supply Officer weekly reports\r\n            summarizing all requisitions, cancellations, and current budget\r\n            status for review and approval by the Commanding Officer.\r\n          </li>\r\n        </ul>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Jumbotron } from \"reactstrap\";\r\n\r\nconst MyJumbotron = props => {\r\n  return (\r\n    <Jumbotron id=\"home\" className=\"content-nav-link\">\r\n      <h1 className=\"display-3\">Philip Patton</h1>\r\n\r\n      <img\r\n        src=\"./img/my-headshot.jpg\"\r\n        alt=\"Ear Ninja Screenshot\"\r\n        className=\"headshot\"\r\n      />\r\n      <p className=\"lead\">Full Stack Software Developer</p>\r\n      <hr className=\"my-2\" />\r\n      <p>\r\n        I began my career after college by embarking on a tour in the US Navy, a\r\n        dream I'd held since childhood. I faced many challenges as I grew as a\r\n        person and teammate guided by excellent leadership and the Navy core\r\n        values. My next job as a healthcare analyst exposed me to the world of\r\n        software development where I quickly developed a passion for problem\r\n        solving, data design, and constant process improvement through the use\r\n        of code. I joined Nashville Software School to further that skill set\r\n        and expand into web development.\r\n      </p>\r\n    </Jumbotron>\r\n  );\r\n};\r\n\r\nexport default MyJumbotron;\r\n","import React from \"react\";\r\nimport TechIcons from \"./TechIcons\";\r\nimport Projects from \"./Projects\";\r\nimport Experience from \"./Experience\";\r\nimport MyJumbotron from \"./MyJumbotron\";\r\n\r\nconst Home = props => {\r\n  return (\r\n    <div>\r\n      <MyJumbotron />\r\n      <Experience />\r\n      <Projects />\r\n      <TechIcons />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem\r\n} from \"reactstrap\";\r\nimport { NavLink } from \"reactstrap\";\r\n\r\nexport default class Footer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n  }\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar color=\"dark\" dark light expand=\"md\" fixed=\"bottom\">\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink to=\"/\" href=\"#home\">\r\n                Git\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink to=\"/\" href=\"#exp\">\r\n                LinkedIn\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink to=\"/\" href=\"#proj\">\r\n                Email\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Nav from \"./comps/Nav\";\r\nimport Home from \"./comps/Home.js\";\r\nimport Footer from \"./comps/Footer.js\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Nav />\r\n        <Home />\r\n        <Footer />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n// import $ from \"jquery\";\r\n// import Popper from \"popper.js\";\r\n// import \"bootstrap/dist/js/bootstrap.bundle.min\";\r\n// import registerServiceWorker from \"registerServiceWorker\";\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}